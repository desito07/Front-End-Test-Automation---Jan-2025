// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
[TestFixture]
public class TestSuiteTest {
  private IWebDriver driver;
  public IDictionary<string, object> vars {get; private set;}
  private IJavaScriptExecutor js;
  [SetUp]
  public void SetUp() {
    driver = new ChromeDriver();
    js = (IJavaScriptExecutor)driver;
    vars = new Dictionary<string, object>();
  }
  [TearDown]
  protected void TearDown() {
    driver.Quit();
  }
  [Test]
  public void tC1SeleniumDev() {
    driver.Navigate().GoToUrl("https://www.selenium.dev/");
    driver.Manage().Window.Size = new System.Drawing.Size(829, 602);
    driver.FindElement(By.CssSelector(".navbar-toggler-icon")).Click();
    driver.FindElement(By.LinkText("Documentation")).Click();
    driver.FindElement(By.CssSelector(".breadcrumb-item:nth-child(1) > a")).Click();
    vars["root"] = driver.CurrentWindowHandle;
    driver.SwitchTo().Window(vars["root"].ToString());
    driver.Close();
  }
  [Test]
  public void tC2SoftUni() {
    driver.Navigate().GoToUrl("https://softuni.bg/");
    driver.Manage().Window.Size = new System.Drawing.Size(1200, 672);
    driver.FindElement(By.CssSelector(".desktop-logo")).Click();
    driver.Close();
  }
  [Test]
  public void tC3KatalonCura() {
    driver.Navigate().GoToUrl("https://katalon-demo-cura.herokuapp.com/");
    driver.Manage().Window.Size = new System.Drawing.Size(1200, 672);
    driver.FindElement(By.CssSelector(".fa-bars")).Click();
    Assert.That(driver.FindElement(By.XPath("//div[@class=\"text-vertical-center\"]//h1")).Text, Is.EqualTo("CURA Healthcare Service"));
    driver.FindElement(By.LinkText("Login")).Click();
    Assert.That(driver.FindElement(By.XPath("//h2")).Text, Is.EqualTo("Login"));
    driver.FindElement(By.Id("txt-username")).Click();
    driver.FindElement(By.Id("txt-username")).SendKeys("randomuser123");
    driver.FindElement(By.Id("txt-password")).Click();
    driver.FindElement(By.Id("txt-password")).SendKeys("123456");
    driver.FindElement(By.Id("btn-login")).Click();
    Assert.That(driver.FindElement(By.XPath("//p[@class=\"lead text-danger\"]")).Text, Is.EqualTo("Login failed! Please ensure the username and password are valid."));
    driver.Close();
  }
  [Test]
  public void tC6KatalonCuraLoop() {
    driver.Navigate().GoToUrl("https://katalon-demo-cura.herokuapp.com/");
    driver.FindElement(By.CssSelector(".fa-bars")).Click();
    driver.FindElement(By.LinkText("Login")).Click();
    var times = 3;
    for(int i = 0; i < times; i++) {
      driver.FindElement(By.Id("txt-username")).SendKeys("desito07");
      driver.FindElement(By.Id("txt-password")).SendKeys("123456");
      driver.FindElement(By.Id("btn-login")).Click();
    }
    driver.Close();
  }
  [Test]
  public void tC4KatalonCuraHeader() {
    driver.Navigate().GoToUrl("https://katalon-demo-cura.herokuapp.com/");
    Assert.That(driver.FindElement(By.XPath("//h1")).Text, Is.EqualTo("CURA Healthcare Service"));
    Console.WriteLine(vars["heading"].ToString());
    vars["webpageTitle"] = driver.Title;
    Console.WriteLine(vars["pageTitle"].ToString());
    driver.Close();
  }
  [Test]
  public void tC5KatalonCuraIfElse() {
    driver.Navigate().GoToUrl("https://katalon-demo-cura.herokuapp.com/");
    Assert.That(driver.FindElement(By.XPath("//h1")).Text, Is.EqualTo("CURA Healthcare Service"));
    Console.WriteLine(vars["heading"].ToString());
    vars["webpageTitle"] = driver.Title;
    Console.WriteLine(vars["pageTitle"].ToString());
    if ((Boolean) js.ExecuteScript("return (arguments[0]===\'CURA Healthcare Service\')", vars["webpageTitle"])) {
      Console.WriteLine("Matched");
    } else {
      Console.WriteLine("Unmatched");
    }
    driver.Close();
  }
  [Test]
  public void tC7KatalonCuraDoLoop() {
    driver.Navigate().GoToUrl("https://katalon-demo-cura.herokuapp.com/");
    driver.FindElement(By.CssSelector(".fa-bars")).Click();
    vars["check"] = js.ExecuteScript("return 0");
    do {
      vars["check"] = js.ExecuteScript("return arguments[0] + 1", vars["check"]);
    } while ((Boolean) js.ExecuteScript("return (arguments[0]<3)", vars["check"]));
    driver.Close();
  }
  [Test]
  public void tC8KatalonCuraWhileLoop() {
    driver.Navigate().GoToUrl("https://katalon-demo-cura.herokuapp.com/");
    driver.FindElement(By.CssSelector(".fa-bars")).Click();
    vars["x"] = js.ExecuteScript("return 0");
    while ((Boolean) js.ExecuteScript("return (arguments[0]<3)", vars["x"])) {
      vars["x"] = js.ExecuteScript("return arguments[0] + 1", vars["x"]);
    }
  }
  [Test]
  public void tC9KatalonCuraForEachLoop() {
    driver.Navigate().GoToUrl("https://katalon-demo-cura.herokuapp.com/");
    vars["x"] = js.ExecuteScript("return [\"Audi\", \"Volvo\", \"BMW\", \"Opel\", \"Ford\"]");
    var xEnum = ((IReadOnlyCollection<object>)vars["x"]).ToList().GetEnumerator();
    while (xEnum.MoveNext())
    {
      vars["itr"] = xEnum.Current;
      Console.WriteLine(vars["itr"].ToString());
    }
  }
}
